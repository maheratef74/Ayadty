@{
    Layout = null;
}

@inject IViewLocalizer localizer
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization

@{
    var isRTL = CultureInfo.CurrentCulture.Name.StartsWith("ar");
}

@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = options.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<!DOCTYPE html>

<html lang="ar" dir="@(isRTL ? "RTL" : "LTR")">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@localizer["Working Days"]</title>
    <link rel="stylesheet" href="~/css/working days.css">
</head>

<body>



    <header>
        <form asp-controller="Localization" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" method="post">
            <select name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
            </select>
        </form>
    </header>


    <div class="container">
        <div class="title">
            <h1>@localizer["Working Days"]</h1>
            <hr>
        </div>

        <!-- Header Row -->
        <div class="header-row">
            <div>@localizer["Day"]</div>
            <div>@localizer["Start Time"]</div>
            <div>@localizer["End Time"]</div>
        </div>

        <div id="formContainer">
            <!-- New rows will be added here -->
        </div>

        <div id="buttons">
            <button id="addMore">@localizer["Add More"]</button>
            <button id="save">@localizer["Save"]</button>
            <button id="edit" style="display:none;">@localizer["Edit"]</button>
        </div>
    </div>

    <script>
        let editMode = false;

        document.getElementById('addMore').addEventListener('click', function () {
            addRow();
        });

        document.getElementById('save').addEventListener('click', function () {
            saveForm();
        });

        document.getElementById('edit').addEventListener('click', function () {
            enableEditing();
        });

        function addRow(day = '', startTime = '', endTime = '') {
            const row = document.createElement('div');
            row.classList.add('form-row');
            row.innerHTML = `
                        <select ${editMode ? 'disabled' : ''}>
                            <option value="" ${!day ? 'selected' : ''}>Select day</option>
                            <option value="Monday" ${day === 'Monday' ? 'selected' : ''}>Monday</option>
                            <option value="Tuesday" ${day === 'Tuesday' ? 'selected' : ''}>Tuesday</option>
                            <option value="Wednesday" ${day === 'Wednesday' ? 'selected' : ''}>Wednesday</option>
                            <option value="Thursday" ${day === 'Thursday' ? 'selected' : ''}>Thursday</option>
                            <option value="Friday" ${day === 'Friday' ? 'selected' : ''}>Friday</option>
                            <option value="Saturday" ${day === 'Saturday' ? 'selected' : ''}>Saturday</option>
                            <option value="Sunday" ${day === 'Sunday' ? 'selected' : ''}>Sunday</option>
                        </select>
                        <input type="time" placeholder="Enter start time" value="${startTime}" ${editMode ? 'disabled' : ''}>
                        <input type="time" placeholder="Enter end time" value="${endTime}" ${editMode ? 'disabled' : ''}>
                        <button type="button" class="delete-button" onclick="deleteRow(this)">Delete</button>
                    `;
            document.getElementById('formContainer').appendChild(row);
        }

        function deleteRow(button) {
            button.parentElement.remove();
        }

        function saveForm() {
            const inputs = document.querySelectorAll('#formContainer input, #formContainer select');
            inputs.forEach(input => input.disabled = true);
            document.getElementById('edit').style.display = 'block';
            document.getElementById('save').style.display = 'none';
            editMode = true;
        }

        function enableEditing() {
            const inputs = document.querySelectorAll('#formContainer input, #formContainer select');
            inputs.forEach(input => input.disabled = false);
            document.getElementById('edit').style.display = 'none';
            document.getElementById('save').style.display = 'block';
            editMode = false;
        }

        // Add a row when the page loads
        window.onload = function () {
            addRow();
        };
    </script>
</body>

</html>